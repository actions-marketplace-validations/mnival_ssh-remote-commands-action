name: Check action

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
  pull_request:
    branches:
      - main

jobs:
  check-action-directly:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/vault
        id: vault
        with:
          url: ${{ secrets.VAULT_URL }}

      - name: Test Remote command directly
        id: ssh
        uses: mnival/ssh-remote-commands-action@main
        with:
          ssh_host: ${{ steps.vault.outputs.ssh_host }}
          ssh_user: ${{ steps.vault.outputs.ssh_user }}
          ssh_key: ${{ steps.vault.outputs.ssh_key }}
          ssh_port: ${{ steps.vault.outputs.ssh_port }}
          ssh_commands: echo "Test Remote command directly"

      - name: Test after init
        uses: mnival/ssh-remote-commands-action@main
        with: 
          ssh_host_alias: ${{ steps.ssh.outputs.ssh_host_alias }}
          ssh_commands: echo "Test after init"

  check-action-after-config:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/vault
        id: vault
        with:
          url: ${{ secrets.VAULT_URL }}

      - name: SSH Config
        id: ssh
        uses: mnival/ssh-config-action@v0.0.2
        with:
          ssh_host: ${{ steps.vault.outputs.ssh_host }}
          ssh_user: ${{ steps.vault.outputs.ssh_user }}
          ssh_key: ${{ steps.vault.outputs.ssh_key }}
          ssh_port: ${{ steps.vault.outputs.ssh_port }}

      - name: Test Remote Command
        uses: mnival/ssh-remote-commands-action@main
        with:
          ssh_host_alias: ${{ steps.ssh.outputs.ssh_host_alias }}
          ssh_commands: echo "Test Remote Command"
          ssh_args: -T
